** this is the overview.edoc file for the application 'erlang-mswitch'

@author Jean-Lou Dupont
@title  mswitch $version - documentation 

@doc    

<b>mswitch</b> consists of a erlang daemon serving inter-node messages through a publish/subscribe API.

== Daemon management ==

The mswitch daemon can be managed using the command-line script 'mswitch'.

	```
		mswitch start
		mswitch stop
	'''

== API ==
The API consists of the following functions:

<ul>
 <li>subscribe(Bus, Mailbox)</li>
 <li>unsubscribe(Bus)</li>
 <li>publish(Bus, Message)</li>
</ul>

== Resiliency ==
The subscription details of each subscriber is kept local to each subscriber. This is transparent to the API user.
When the 'mswitch' daemon restarts, the subscription details of each subscriber is used to automatically re-subscribe each one. 

== Usage == 

To use the services of mswitch with Erlang, the mswitch library must be installed locally.
This step is normally taken care of when installing from the Debian repository associated with the project.

=== Subscribing ===

To subscribe to a 'bus':

	```
		mswitch:subscribe(Bus, Mailbox)
	'''
	where:
	<ul>
	 <li>'Bus' is any valid Erlang term (atom, string)</li>
	 <li>'Mailbox' consists of a tuple {Module, Function, Server}</li>
	</ul>
	
	The 'Mailbox' is a Module:Function reachable by the Erlang emulator and 'Server' consists of
	a registered server process.
	
=== Sending ===

To send a Message on a Bus,

	```
		mswitch:publish(Bus, Message)
	'''
	where 'Message' is any valid Erlang term.
	
=== Receiving ===

Subscribers receive Message through their registered server process using a small 'thunk':

	```
		inbox({FromNode, Server, Bus, Message}) ->
			Server ! {FromNode, Bus, Message}.
	'''

	When a subscriber wishes to receive messages from 'Bus', a 'Mailbox' of the form:
	```
		Mailbox = {Module, inbox, Server}
	'''
	can be used.

== Releases ==

  ===0.1===
  Initial release
  
  ===0.2===
  <ul>
   <li>Added the default "system" bus.</li>
   <li>Added 'nodes' command to mswitch_control</li>
  </ul>
  
  ===0.3===
  <ul>
   <li>Factored-in module hierarchy</li>
   <li>Added 'mswitch_sniffer' command-line utility</li>   
  </ul>
  
  ===1.0===
  <ul>
   <li>Changed inbox API to include the source 'bus'</li> 
  </ul>
  